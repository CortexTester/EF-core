// <auto-generated />
using System;
using CBX.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CBX.Data.Migrations
{
    [DbContext(typeof(CbxContext))]
    partial class CbxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CBX.Domain.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("ProtocolId");

                    b.HasKey("Id");

                    b.HasIndex("ProtocolId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("CBX.Domain.Protocol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Protocols");
                });

            modelBuilder.Entity("CBX.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("PartyId");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CBX.Domain.Party", b =>
                {
                    b.HasOne("CBX.Domain.Protocol", "Protocol")
                        .WithMany()
                        .HasForeignKey("ProtocolId");
                });

            modelBuilder.Entity("CBX.Domain.User", b =>
                {
                    b.HasOne("CBX.Domain.Party", "Party")
                        .WithMany("Users")
                        .HasForeignKey("PartyId");
                });
#pragma warning restore 612, 618
        }
    }
}
